#!/bin/bash -ex

CMAKE_BUILD_PARALLEL_LEVEL=${CMAKE_BUILD_PARALLEL_LEVEL:-4}

ESMINI_INSTALL_PREFIX=${ESMINI_INSTALL_PREFIX:-/usr/local}
ESMINI_BUILD_INSTALL_PREFIX=${ESMINI_BUILD_INSTALL_PREFIX:-${ESMINI_INSTALL_PREFIX}}
ESMINI_BUILD_OSG_SOURCE_DIR="/tmp/osg"
ESMINI_BUILD_OSG_BUILD_DIR=${ESMINI_BUILD_OSG_SOURCE_DIR}/build
ESMINI_BUILD_OSG_SOURCE_REPOSITORY_URL="https://github.com/OpenSceneGraph/OpenSceneGraph"
ESMINI_BUILD_OSG_VERSION=${ESMINI_BUILD_OSG_VERSION:-3.6.5}
ESMINI_BUILD_OSG_BUILD_SHARED_LIBS=${ESMINI_BUILD_OSG_BUILD_SHARED_LIBS:-ON}
ESMINI_BUILD_OSG_BUILD_APPLICATIONS=${ESMINI_BUILD_OSG_BUILD_APPLICATIONS:-ON}

ESMINI_BUILD_OSG_WITH_FBX=${ESMINI_BUILD_OSG_WITH_FBX:-"ON"}
ESMINI_BUILD_FBXSDK_SOURCE_DIR="/tmp/fbxsdk"
ESMINI_BUILD_FBXSDK_INSTALL_DIR="${ESMINI_BUILD_FBXSDK_INSTALL_DIR:-${ESMINI_BUILD_FBXSDK_SOURCE_DIR}/fbxsdk}"

if [[ "${ESMINI_BUILD_OSG_WITH_FBX}" == "ON"   || \
      "${ESMINI_BUILD_OSG_WITH_FBX}" == "1"    || \
      "${ESMINI_BUILD_OSG_WITH_FBX}" == "YES"  || \
      "${ESMINI_BUILD_OSG_WITH_FBX}" == "TRUE" ]];\
then
  FBXSDK_VERSION_MAJOR="${FBXSDK_VERSION_MAJOR:-2020}"
  FBXSDK_VERSION_MINOR="${FBXSDK_VERSION_MINOR:-3}"
  FBXSDK_VERSION_PATCH="${FBXSDK_VERSION_PATCH:-2}"
  FBXSDK_VERSION="${FBXSDK_VERSION_MAJOR}${FBXSDK_VERSION_MINOR}${FBXSDK_VERSION_PATCH}"
  FBXSDK_VERSION_DASHED="${FBXSDK_VERSION_MAJOR}-${FBXSDK_VERSION_MINOR}-${FBXSDK_VERSION_PATCH}"
  FBXSDK_DOWNLOAD_URL="https://www.autodesk.com/content/dam/autodesk/www/adn/fbx/${FBXSDK_VERSION_DASHED}/fbx${FBXSDK_VERSION}_fbxsdk_linux.tar.gz"
  mkdir -p "${ESMINI_BUILD_FBXSDK_SOURCE_DIR}"
  mkdir -p "${ESMINI_BUILD_FBXSDK_INSTALL_DIR}"
  curl -kL --user-agent "Mozilla/5.0" "${FBXSDK_DOWNLOAD_URL}" | tar xzv -C "${ESMINI_BUILD_FBXSDK_SOURCE_DIR}"
  yes yes | ${ESMINI_BUILD_FBXSDK_SOURCE_DIR}/fbx"${FBXSDK_VERSION}"_fbxsdk_linux "${ESMINI_BUILD_FBXSDK_INSTALL_DIR}"
fi

git clone "${ESMINI_BUILD_OSG_SOURCE_REPOSITORY_URL}" ${ESMINI_BUILD_OSG_SOURCE_DIR} \
  --depth 1 \
  --branch "OpenSceneGraph-${ESMINI_BUILD_OSG_VERSION}" \
  --recurse-submodules

cmake \
  -S ${ESMINI_BUILD_OSG_SOURCE_DIR} \
  -B ${ESMINI_BUILD_OSG_BUILD_DIR} \
  -DOPENGL_PROFILE=GL2 \
  -DOSG_AGGRESSIVE_WARNINGS=OFF \
  -DDYNAMIC_OPENSCENEGRAPH="${ESMINI_BUILD_OSG_BUILD_SHARED_LIBS}" \
  -DDYNAMIC_OPENTHREADS="${ESMINI_BUILD_OSG_BUILD_SHARED_LIBS}" \
  -DBUILD_OSG_APPLICATIONS="${ESMINI_BUILD_OSG_BUILD_APPLICATIONS}" \
  -DBUILD_OSG_EXAMPLES=OFF \
  -DBUILD_OSG_DEPRECATED_SERIALIZERS=OFF \
  -DBUILD_DOCUMENTATION=OFF \
  -DBUILD_OSG_PLUGINS=ON \
  -DBUILD_OSG_PLUGIN_FBX="${ESMINI_BUILD_OSG_WITH_FBX}" \
  -DFBX_INCLUDE_DIR="${ESMINI_BUILD_FBXSDK_INSTALL_DIR}/include" \
  -DFBX_LIBRARY="${ESMINI_BUILD_FBXSDK_INSTALL_DIR}/lib/gcc/x64/release/libfbxsdk.a" \
  -DFBX_LIBRARY_DEBUG="${ESMINI_BUILD_FBXSDK_INSTALL_DIR}/lib/gcc/x64/debug/libfbxsdk.a" \
  -DCMAKE_INSTALL_PREFIX="${ESMINI_BUILD_INSTALL_PREFIX}" \
  -DCMAKE_POSITION_INDEPENDENT_CODE=ON
mkdir -p "${ESMINI_BUILD_INSTALL_PREFIX}"
cmake --build ${ESMINI_BUILD_OSG_BUILD_DIR} --target install

# Cleanup
rm -rf ${ESMINI_BUILD_OSG_SOURCE_DIR} ${ESMINI_BUILD_OSG_BUILD_DIR}